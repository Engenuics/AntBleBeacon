###############################################################################
#
# IAR ANSI C/C++ Compiler V8.10.1.12857/W32 for ARM       29/Jun/2018  00:30:11
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\EiE\EiE Git\AntBleBeacon\application\main.c
#    Command line =  
#        -f C:\Users\ENGENU~1\AppData\Local\Temp\EW5CC1.tmp ("D:\EiE\EiE
#        Git\AntBleBeacon\application\main.c" -D NRF51 -lC "D:\EiE\EiE
#        Git\AntBleBeacon\iar_8_10_1\Debug\List" -o "D:\EiE\EiE
#        Git\AntBleBeacon\iar_8_10_1\Debug\Obj" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M0 -e --fpu=None --dlib_config
#        "C:\Program Files\IAR
#        Systems\EWARM_8_10_1\arm\INC\c\DLib_Config_Normal.h" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_8_10_1\..\bsp\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_8_10_1\..\application\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_8_10_1\..\nordic_sdk6_1_0\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_8_10_1\..\nordic_sdk6_1_0\Include\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_8_10_1\..\nordic_sdk6_1_0\Include\s310\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_8_10_1\..\nordic_sdk6_1_0\Include\ble\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_8_10_1\..\nordic_sdk6_1_0\Include\ble\ble_services\"
#        -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_8_10_1\..\nordic_sdk6_1_0\Include\ble\device_manager\"
#        -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_8_10_1\..\nordic_sdk6_1_0\Include\app_common\"
#        -On --require_prototypes -I "C:\Program Files\IAR
#        Systems\EWARM_8_10_1\arm\CMSIS\Include\")
#    Locale       =  C
#    List file    =  D:\EiE\EiE Git\AntBleBeacon\iar_8_10_1\Debug\List\main.lst
#    Object file  =  D:\EiE\EiE Git\AntBleBeacon\iar_8_10_1\Debug\Obj\main.o
#
###############################################################################

D:\EiE\EiE Git\AntBleBeacon\application\main.c
      1          /***********************************************************************************************************************
      2          File: main.c                                                                
      3          
      4          Description:
      5          Container for the nRF51422 firmware.  
      6          ***********************************************************************************************************************/
      7          
      8          #include "configuration.h"

                GPIOE_TASK0  = 0, GPIOE_TASK0  = 1, GPIOE_TASK0  = 2, GPIOE_TASK0  = 3, 
                                  ^
"D:\EiE\EiE Git\AntBleBeacon\application\typedefs.h",65  Error[Pe101]: 
          "GPIOE_TASK0" has already been declared in the current scope (at line
          65)

                GPIOE_TASK0  = 0, GPIOE_TASK0  = 1, GPIOE_TASK0  = 2, GPIOE_TASK0  = 3, 
                                                    ^
"D:\EiE\EiE Git\AntBleBeacon\application\typedefs.h",65  Error[Pe101]: 
          "GPIOE_TASK0" has already been declared in the current scope (at line
          65)

                GPIOE_TASK0  = 0, GPIOE_TASK0  = 1, GPIOE_TASK0  = 2, GPIOE_TASK0  = 3, 
                                                                      ^
"D:\EiE\EiE Git\AntBleBeacon\application\typedefs.h",65  Error[Pe101]: 
          "GPIOE_TASK0" has already been declared in the current scope (at line
          65)

  void LedOn(LedNumberType eLED_);
             ^
"D:\EiE\EiE Git\AntBleBeacon\bsp\leds_nrf51.h",76  Error[Pe020]: identifier
          "LedNumberType" is undefined

  void LedOff(LedNumberType eLED_);
              ^
"D:\EiE\EiE Git\AntBleBeacon\bsp\leds_nrf51.h",77  Error[Pe020]: identifier
          "LedNumberType" is undefined

  void LedToggle(LedNumberType eLED_);
                 ^
"D:\EiE\EiE Git\AntBleBeacon\bsp\leds_nrf51.h",78  Error[Pe020]: identifier
          "LedNumberType" is undefined

  void LedPWM(LedNumberType eLED_, LedRateType ePwmRate_);
              ^
"D:\EiE\EiE Git\AntBleBeacon\bsp\leds_nrf51.h",79  Error[Pe020]: identifier
          "LedNumberType" is undefined

  void LedBlink(LedNumberType eLED_, LedRateType ePwmRate_);
                ^
"D:\EiE\EiE Git\AntBleBeacon\bsp\leds_nrf51.h",80  Error[Pe020]: identifier
          "LedNumberType" is undefined
      9          
     10          /***********************************************************************************************************************
     11          Global variable definitions with scope across entire project.
     12          All Global variable names shall start with "G_"
     13          ***********************************************************************************************************************/
     14          /* New variables */
     15          volatile u32 G_u32SystemTime1ms = 0;     /*!< @brief Global system time incremented every ms, max 2^32 (~49 days) */
     16          volatile u32 G_u32SystemTime1s  = 0;     /*!< @brief Global system time incremented every second, max 2^32 (~136 years) */
     17          volatile u32 G_u32SystemFlags   = 0;     /*!< @brief Global system flags */
     18          
     19          
     20          /*--------------------------------------------------------------------------------------------------------------------*/
     21          /* External global variables defined in other files (must indicate which file they are defined in) */
     22          
     23          extern fnCode_type ANTTT_SM;
     24          
     25          
     26          /***********************************************************************************************************************
     27          Global variable definitions with scope limited to this local application.
     28          Variable names shall start with "Main_" and be declared as static.
     29          ***********************************************************************************************************************/
     30          static u32 Main_u32ErrorCode;
                            ^
Warning[Pe177]: variable "Main_u32ErrorCode" was declared but never referenced
     31          static u8 Main_u8TestMessage[] = "9876 test message from ANT";
                           ^
Warning[Pe177]: variable "Main_u8TestMessage" was declared but never referenced
     32          
     33          
     34          /***********************************************************************************************************************
     35          Function Definitions
     36          ***********************************************************************************************************************/
     37          
     38          /***********************************************************************************************************************
     39          Main Program
     40          Main has two sections:
     41          
     42          1. Initialization which is run once on power-up or reset.  All drivers and applications are setup here without timing
     43          contraints but must complete execution regardless of success or failure of starting the application. 
     44          
     45          2. Main loop.  This is an event-driven system that sequentially executes tasks that require servicing in the event queue.
     46          
     47          ***********************************************************************************************************************/
     48          void main(void)
     49          {
     50            G_u32SystemFlags |= _SYSTEM_INITIALIZING;
     51            
     52            /*
     53            Due to the switch that the application makes from the User mode system to SoftDevice
     54            mode System, this module sets up the basic clocks and I/Os, followed by enabling the SD.
     55            Once the SD is enabled, the application shall only use the SD provided system calls
     56            */
     57            __disable_interrupt();
     58          
     59            /* Clock, GPIO and SoftDevice setup */  
     60            ClockSetup();
     61            GpioSetup();
     62          
     63            __enable_interrupt();
     64            
     65            /* Enable the s310 SoftDevice Stack. If Failure, we shall not progress as 
     66            successive code is dependent on SD success. */
     67            if (!SocIntegrationInitialize())
     68            {
     69              /* Lite up all the RED LEDs to indicate this state */
     70              NRF_GPIO->OUTSET = (RED0 | RED1 | RED2 | RED3 | RED4 | RED5 | RED6 | RED7);
     71              while (1);
     72            }
     73            
     74            /* Low Level Initialization Modules */
     75            WatchDogSetup(); 
     76            SysTickSetup();
     77            InterruptsInitialize();
     78              
     79            /* Driver initialization */
     80            LedInitialize();
     81            ButtonInitialize();
     82          
     83            ANTIntegrationInitialize();
     84            BLEIntegrationInitialize();
     85            bleperipheralInitialize();
     86            
     87            /* Application initialization */
     88            //PovInitialize();
     89            
     90            /* Exit initialization */
     91            G_u32SystemFlags &= ~_SYSTEM_INITIALIZING;
     92            
     93            /* Main loop */  
     94            while(1)
     95            {
     96              SocIntegrationHandler();
     97              LedUpdate();
     98              
     99              /* State Machines */
    100              //PovRunActiveState();
    101              ButtonRunActiveState();
    102             
    103              /* System sleep*/
    104              SystemSleep();
    105            } /* end while(1) main super loop */
    106            
    107          } /* end main() */
    108          
    109          
    110          
    111          
    112          /*--------------------------------------------------------------------------------------------------------------------*/
    113          /* End of File */
    114          /*--------------------------------------------------------------------------------------------------------------------*/

Errors: 8
Warnings: 2
