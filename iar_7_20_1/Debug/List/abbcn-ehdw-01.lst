###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.1.7305/W32 for ARM        29/Jun/2018  10:17:50
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\EiE\EiE Git\AntBleBeacon\bsp\abbcn-ehdw-01.c
#    Command line =  
#        "D:\EiE\EiE Git\AntBleBeacon\bsp\abbcn-ehdw-01.c" -D NRF51 -lC
#        "D:\EiE\EiE Git\AntBleBeacon\iar_7_20_1\Debug\List\" -o "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\Debug\Obj\" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M0 -e --fpu=None --dlib_config
#        "C:\Program Files\IAR
#        Systems\EWARM_7_20_1\arm\INC\c\DLib_Config_Normal.h" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\bsp\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\application\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\s310\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\ble\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\ble\ble_services\"
#        -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\ble\device_manager\"
#        -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\app_common\"
#        -On --require_prototypes -I "C:\Program Files\IAR
#        Systems\EWARM_7_20_1\arm\CMSIS\Include\"
#    List file    =  
#        D:\EiE\EiE Git\AntBleBeacon\iar_7_20_1\Debug\List\abbcn-ehdw-01.lst
#    Object file  =  
#        D:\EiE\EiE Git\AntBleBeacon\iar_7_20_1\Debug\Obj\abbcn-ehdw-01.o
#
###############################################################################

D:\EiE\EiE Git\AntBleBeacon\bsp\abbcn-ehdw-01.c
      1          /***********************************************************************************************************************
      2          File: abbcn-ehdw-01.c                                                                
      3          
      4          Description:
      5          This file provides board support functions for the nRF51422 processor on the ABBCN-EHDW-01 development board.
      6          ***********************************************************************************************************************/
      7          
      8          #include "configuration.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_SetPriority(IRQn_Type, uint32_t)
   \                     NVIC_SetPriority: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB240             SXTB     R0,R0
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD522             BPL      ??NVIC_SetPriority_0
   \   00000008   0x....             LDR      R4,??DataTable3  ;; 0xe000ed1c
   \   0000000A   0xB240             SXTB     R0,R0
   \   0000000C   0x0702             LSLS     R2,R0,#+28       ;; ZeroExtS R2,R0,#+28,#+28
   \   0000000E   0x0F12             LSRS     R2,R2,#+28
   \   00000010   0x3A08             SUBS     R2,R2,#+8
   \   00000012   0x0015             MOVS     R5,R2
   \   00000014   0x08AD             LSRS     R5,R5,#+2
   \   00000016   0x2204             MOVS     R2,#+4
   \   00000018   0x4355             MULS     R5,R2,R5
   \   0000001A   0x....             LDR      R2,??DataTable3  ;; 0xe000ed1c
   \   0000001C   0xB240             SXTB     R0,R0
   \   0000001E   0x0703             LSLS     R3,R0,#+28       ;; ZeroExtS R3,R0,#+28,#+28
   \   00000020   0x0F1B             LSRS     R3,R3,#+28
   \   00000022   0x3B08             SUBS     R3,R3,#+8
   \   00000024   0x089B             LSRS     R3,R3,#+2
   \   00000026   0x2604             MOVS     R6,#+4
   \   00000028   0x4373             MULS     R3,R6,R3
   \   0000002A   0x58D2             LDR      R2,[R2, R3]
   \   0000002C   0x23FF             MOVS     R3,#+255
   \   0000002E   0x0786             LSLS     R6,R0,#+30       ;; ZeroExtS R6,R0,#+30,#+30
   \   00000030   0x0FB6             LSRS     R6,R6,#+30
   \   00000032   0x2708             MOVS     R7,#+8
   \   00000034   0x437E             MULS     R6,R7,R6
   \   00000036   0x40B3             LSLS     R3,R3,R6
   \   00000038   0x439A             BICS     R2,R2,R3
   \   0000003A   0x018B             LSLS     R3,R1,#+6
   \   0000003C   0xB2DB             UXTB     R3,R3
   \   0000003E   0x0786             LSLS     R6,R0,#+30       ;; ZeroExtS R6,R0,#+30,#+30
   \   00000040   0x0FB6             LSRS     R6,R6,#+30
   \   00000042   0x2708             MOVS     R7,#+8
   \   00000044   0x437E             MULS     R6,R7,R6
   \   00000046   0x40B3             LSLS     R3,R3,R6
   \   00000048   0x4313             ORRS     R3,R3,R2
   \   0000004A   0x5163             STR      R3,[R4, R5]
   \   0000004C   0xE01C             B        ??NVIC_SetPriority_1
   \                     ??NVIC_SetPriority_0: (+1)
   \   0000004E   0x....             LDR      R2,??DataTable5  ;; 0xe000e400
   \   00000050   0xB240             SXTB     R0,R0
   \   00000052   0x0003             MOVS     R3,R0
   \   00000054   0x089B             LSRS     R3,R3,#+2
   \   00000056   0x2404             MOVS     R4,#+4
   \   00000058   0x4363             MULS     R3,R4,R3
   \   0000005A   0x58D2             LDR      R2,[R2, R3]
   \   0000005C   0x23FF             MOVS     R3,#+255
   \   0000005E   0x0784             LSLS     R4,R0,#+30       ;; ZeroExtS R4,R0,#+30,#+30
   \   00000060   0x0FA4             LSRS     R4,R4,#+30
   \   00000062   0x2508             MOVS     R5,#+8
   \   00000064   0x436C             MULS     R4,R5,R4
   \   00000066   0x40A3             LSLS     R3,R3,R4
   \   00000068   0x439A             BICS     R2,R2,R3
   \   0000006A   0x018B             LSLS     R3,R1,#+6
   \   0000006C   0xB2DB             UXTB     R3,R3
   \   0000006E   0x0784             LSLS     R4,R0,#+30       ;; ZeroExtS R4,R0,#+30,#+30
   \   00000070   0x0FA4             LSRS     R4,R4,#+30
   \   00000072   0x2508             MOVS     R5,#+8
   \   00000074   0x436C             MULS     R4,R5,R4
   \   00000076   0x40A3             LSLS     R3,R3,R4
   \   00000078   0x4313             ORRS     R3,R3,R2
   \   0000007A   0x....             LDR      R2,??DataTable5  ;; 0xe000e400
   \   0000007C   0xB240             SXTB     R0,R0
   \   0000007E   0x0004             MOVS     R4,R0
   \   00000080   0x08A4             LSRS     R4,R4,#+2
   \   00000082   0x2504             MOVS     R5,#+4
   \   00000084   0x436C             MULS     R4,R5,R4
   \   00000086   0x5113             STR      R3,[R2, R4]
   \                     ??NVIC_SetPriority_1: (+1)
   \   00000088   0xBDF0             POP      {R4-R7,PC}       ;; return
      9          
     10          /***********************************************************************************************************************
     11          Global variable definitions with scope across entire project.
     12          All Global variable names shall start with "G_"
     13          ***********************************************************************************************************************/
     14          
     15          /* New variables */
     16          
     17          /*! LED locations: order must correspond to the order set in LedNameType in the header file. */

   \                                 In section .rodata, align 4
     18          const Nrf51PinConfigurationType G_asBspLedConfigurations[U8_TOTAL_LEDS] = { {P0_23_RED0, 0, PIN30, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
   \                     G_asBspLedConfigurations:
   \   00000000   0x00800000         DC32 8388608, 0
   \              0x00000000   
   \   00000008   0x1E 0x01          DC8 30, 1, 4, 0
   \              0x04 0x00    
   \   0000000C   0x00200000         DC32 2097152, 0
   \              0x00000000   
   \   00000014   0x15 0x01          DC8 21, 1, 4, 0
   \              0x04 0x00    
   \   00000018   0x10000000         DC32 268435456, 0
   \              0x00000000   
   \   00000020   0x1C 0x01          DC8 28, 1, 4, 0
   \              0x04 0x00    
   \   00000024   0x08000000         DC32 134217728, 0
   \              0x00000000   
   \   0000002C   0x1B 0x01          DC8 27, 1, 4, 0
   \              0x04 0x00    
   \   00000030   0x04000000         DC32 67108864, 0
   \              0x00000000   
   \   00000038   0x1A 0x01          DC8 26, 1, 4, 0
   \              0x04 0x00    
   \   0000003C   0x02000000         DC32 33554432, 0
   \              0x00000000   
   \   00000044   0x19 0x01          DC8 25, 1, 4, 0
   \              0x04 0x00    
   \   00000048   0x00400000         DC32 4194304, 0
   \              0x00000000   
   \   00000050   0x16 0x01          DC8 22, 1, 4, 0
   \              0x04 0x00    
   \   00000054   0x01000000         DC32 16777216, 0
   \              0x00000000   
   \   0000005C   0x18 0x01          DC8 24, 1, 4, 0
   \              0x04 0x00    
   \   00000060   0x00000800         DC32 2048, 0
   \              0x00000000   
   \   00000068   0x0B 0x01          DC8 11, 1, 4, 0
   \              0x04 0x00    
   \   0000006C   0x00000400         DC32 1024, 0
   \              0x00000000   
   \   00000074   0x0A 0x01          DC8 10, 1, 4, 0
   \              0x04 0x00    
   \   00000078   0x00000100         DC32 256, 0
   \              0x00000000   
   \   00000080   0x08 0x01          DC8 8, 1, 4, 0
   \              0x04 0x00    
   \   00000084   0x00000040         DC32 64, 0
   \              0x00000000   
   \   0000008C   0x06 0x01          DC8 6, 1, 4, 0
   \              0x04 0x00    
   \   00000090   0x00000010         DC32 16, 0
   \              0x00000000   
   \   00000098   0x04 0x01          DC8 4, 1, 4, 0
   \              0x04 0x00    
   \   0000009C   0x00000004         DC32 4, 0
   \              0x00000000   
   \   000000A4   0x02 0x01          DC8 2, 1, 4, 0
   \              0x04 0x00    
   \   000000A8   0x00000001         DC32 1, 0
   \              0x00000000   
   \   000000B0   0x00 0x01          DC8 0, 1, 4, 0
   \              0x04 0x00    
   \   000000B4   0x20000000         DC32 536870912, 0
   \              0x00000000   
   \   000000BC   0x1D 0x01          DC8 29, 1, 4, 0
   \              0x04 0x00    
   \   000000C0   0x00001000         DC32 4096, 0
   \              0x00000000   
   \   000000C8   0x0C 0x01          DC8 12, 1, 4, 0
   \              0x04 0x00    
   \   000000CC   0x00002000         DC32 8192, 0
   \              0x00000000   
   \   000000D4   0x0D 0x01          DC8 13, 1, 4, 0
   \              0x04 0x00    
   \   000000D8   0x00000200         DC32 512, 0
   \              0x00000000   
   \   000000E0   0x09 0x01          DC8 9, 1, 4, 0
   \              0x04 0x00    
   \   000000E4   0x00000080         DC32 128, 0
   \              0x00000000   
   \   000000EC   0x07 0x01          DC8 7, 1, 4, 0
   \              0x04 0x00    
   \   000000F0   0x00000020         DC32 32, 0
   \              0x00000000   
   \   000000F8   0x05 0x01          DC8 5, 1, 4, 0
   \              0x04 0x00    
   \   000000FC   0x00000008         DC32 8, 0
   \              0x00000000   
   \   00000104   0x03 0x01          DC8 3, 1, 4, 0
   \              0x04 0x00    
   \   00000108   0x00000002         DC32 2, 0
   \              0x00000000   
   \   00000110   0x01 0x01          DC8 1, 1, 4, 0
   \              0x04 0x00    
   \   00000114   0x40000000         DC32 1073741824, 0
   \              0x00000000   
   \   0000011C   0x1E 0x01          DC8 30, 1, 4, 0
   \              0x04 0x00    
     19                                                                                      {P0_21_RED1, 0, PIN21, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     20                                                                                      {P0_28_RED2, 0, PIN28, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     21                                                                                      {P0_27_RED3, 0, PIN27, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     22                                                                                      {P0_26_RED4, 0, PIN26, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     23                                                                                      {P0_25_RED5, 0, PIN25, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     24                                                                                      {P0_22_RED6, 0, PIN22, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     25                                                                                      {P0_24_RED7, 0, PIN24, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     26                                                                                      {P0_11_GRN0, 0, PIN11, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     27                                                                                      {P0_10_GRN1, 0, PIN10, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     28                                                                                      {P0_08_GRN2, 0, PIN8,  ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     29                                                                                      {P0_06_GRN3, 0, PIN6,  ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     30                                                                                      {P0_04_GRN4, 0, PIN4,  ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     31                                                                                      {P0_02_GRN5, 0, PIN2,  ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     32                                                                                      {P0_00_GRN6, 0, PIN0,  ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     33                                                                                      {P0_29_GRN7, 0, PIN29, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     34                                                                                      {P0_12_BLU0, 0, PIN12, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     35                                                                                      {P0_13_BLU1, 0, PIN13, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     36                                                                                      {P0_09_BLU2, 0, PIN9,  ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     37                                                                                      {P0_07_BLU3, 0, PIN7,  ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     38                                                                                      {P0_05_BLU4, 0, PIN5,  ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     39                                                                                      {P0_03_BLU5, 0, PIN3,  ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     40                                                                                      {P0_01_BLU6, 0, PIN1,  ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     41                                                                                      {P0_30_BLU7, 0, PIN30, ACTIVE_HIGH, GPIOE_NO_CHANNEL, 0}, 
     42                                                                                    };
     43          
     44          
     45          
     46          
     47          /*! Button locations: order must correspond to the order set in ButtonNameType in the header file. */

   \                                 In section .rodata, align 4
     48          const Nrf51PinConfigurationType G_asBspButtonConfigurations[U8_TOTAL_BUTTONS] = { {P0_20_BUTTON, BIT0, PIN20, ACTIVE_LOW, GPIOE_EVENT0, 0}, 
   \                     G_asBspButtonConfigurations:
   \   00000000   0x00100000         DC32 1048576, 1
   \              0x00000001   
   \   00000008   0x14 0x00          DC8 20, 0, 0, 0
   \              0x00 0x00    
     49                                                                                          };
     50          
     51          /*--------------------------------------------------------------------------------------------------------------------*/
     52          /* Existing variables (defined in other files -- should all contain the "extern" keyword) */
     53          extern volatile u32 G_u32SystemTime1ms;                /*!< @brief From main.c */
     54          extern volatile u32 G_u32SystemTime1s;                 /*!< @brief From main.c */
     55          extern volatile u32 G_u32SystemFlags;                  /*!< @brief From main.c */
     56           
     57          
     58          /***********************************************************************************************************************
     59          Global variable definitions with scope limited to this local application.
     60          Variable names shall start with "Bsp_" and be declared as static.
     61          ***********************************************************************************************************************/
     62          
     63          
     64          /***********************************************************************************************************************
     65          Function Definitions
     66          ***********************************************************************************************************************/
     67          
     68          /*--------------------------------------------------------------------------------------------------------------------*/
     69          /* Public Functions */
     70          /*--------------------------------------------------------------------------------------------------------------------*/
     71          
     72          
     73          /*--------------------------------------------------------------------------------------------------------------------*/
     74          /* Protected Functions */
     75          /*--------------------------------------------------------------------------------------------------------------------*/
     76          
     77          /*----------------------------------------------------------------------------------------------------------------------
     78          Function: WatchDogSetup
     79          
     80          Description:
     81          Configures the watchdog timer.  The dog runs at 32.768kHz from the slow built-in RC clock source which varies over 
     82          operating conditions from 30kHz to 60kHz.
     83          Since the main loop time / sleep time should be 1 ms most of the time, choosing a value
     84          of 5 seconds should be plenty to avoid watchdog resets.  
     85          
     86          Note: the processor allows the MR register to be written just once.
     87          
     88          Requires:
     89            - 
     90          
     91          Promises:
     92            - Watchdog is set for 5 second timeout but not yet enabled
     93          */

   \                                 In section .text, align 2, keep-with-next
     94          void WatchDogSetup(void)
     95          {
     96           
     97          } /* end WatchDogSetup() */
   \                     WatchDogSetup: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     98          
     99          
    100          /*----------------------------------------------------------------------------------------------------------------------
    101          Function: GpioSetup
    102          
    103          Description
    104          Loads all registers required to set up GPIO on the processor.
    105          
    106          Requires:
    107            - All configurations must match connected hardware.
    108          
    109          Promises:
    110            - All I/O lines are set for their required function and start-state
    111          */

   \                                 In section .text, align 2, keep-with-next
    112          void GpioSetup(void)
    113          {
    114            /* Set all of the pin function registers in port 0 */
    115            NRF_GPIO->PIN_CNF[P0_30_INDEX] = P0_30_BLU7_CNF;
   \                     GpioSetup: (+1)
   \   00000000   0x2003             MOVS     R0,#+3
   \   00000002   0x....             LDR      R1,??DataTable5_1  ;; 0x50000778
   \   00000004   0x6008             STR      R0,[R1, #+0]
    116            NRF_GPIO->PIN_CNF[P0_29_INDEX] = P0_29_GRN7_CNF;
   \   00000006   0x2003             MOVS     R0,#+3
   \   00000008   0x....             LDR      R1,??DataTable5_2  ;; 0x50000774
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    117            NRF_GPIO->PIN_CNF[P0_28_INDEX] = P0_28_RED2_CNF;
   \   0000000C   0x2003             MOVS     R0,#+3
   \   0000000E   0x....             LDR      R1,??DataTable5_3  ;; 0x50000770
   \   00000010   0x6008             STR      R0,[R1, #+0]
    118            NRF_GPIO->PIN_CNF[P0_27_INDEX] = P0_27_RED3_CNF;
   \   00000012   0x2003             MOVS     R0,#+3
   \   00000014   0x....             LDR      R1,??DataTable5_4  ;; 0x5000076c
   \   00000016   0x6008             STR      R0,[R1, #+0]
    119            NRF_GPIO->PIN_CNF[P0_26_INDEX] = P0_26_RED4_CNF;
   \   00000018   0x2003             MOVS     R0,#+3
   \   0000001A   0x....             LDR      R1,??DataTable5_5  ;; 0x50000768
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    120            NRF_GPIO->PIN_CNF[P0_25_INDEX] = P0_25_RED5_CNF;
   \   0000001E   0x2003             MOVS     R0,#+3
   \   00000020   0x....             LDR      R1,??DataTable5_6  ;; 0x50000764
   \   00000022   0x6008             STR      R0,[R1, #+0]
    121            NRF_GPIO->PIN_CNF[P0_24_INDEX] = P0_24_RED7_CNF;
   \   00000024   0x2003             MOVS     R0,#+3
   \   00000026   0x....             LDR      R1,??DataTable5_7  ;; 0x50000760
   \   00000028   0x6008             STR      R0,[R1, #+0]
    122            NRF_GPIO->PIN_CNF[P0_23_INDEX] = P0_23_RED0_CNF;
   \   0000002A   0x2003             MOVS     R0,#+3
   \   0000002C   0x....             LDR      R1,??DataTable5_8  ;; 0x5000075c
   \   0000002E   0x6008             STR      R0,[R1, #+0]
    123            NRF_GPIO->PIN_CNF[P0_22_INDEX] = P0_22_RED6_CNF;
   \   00000030   0x2003             MOVS     R0,#+3
   \   00000032   0x....             LDR      R1,??DataTable5_9  ;; 0x50000758
   \   00000034   0x6008             STR      R0,[R1, #+0]
    124            NRF_GPIO->PIN_CNF[P0_21_INDEX] = P0_21_RED1_CNF;
   \   00000036   0x2003             MOVS     R0,#+3
   \   00000038   0x....             LDR      R1,??DataTable5_10  ;; 0x50000754
   \   0000003A   0x6008             STR      R0,[R1, #+0]
    125            NRF_GPIO->PIN_CNF[P0_20_INDEX] = P0_20_BUTTON_CNF;
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x....             LDR      R1,??DataTable5_11  ;; 0x50000750
   \   00000040   0x6008             STR      R0,[R1, #+0]
    126            NRF_GPIO->PIN_CNF[P0_19_INDEX] = P0_19_EXT1_CNF;
   \   00000042   0x200C             MOVS     R0,#+12
   \   00000044   0x....             LDR      R1,??DataTable5_12  ;; 0x5000074c
   \   00000046   0x6008             STR      R0,[R1, #+0]
    127            NRF_GPIO->PIN_CNF[P0_18_INDEX] = P0_18_EXT2_CNF;
   \   00000048   0x200C             MOVS     R0,#+12
   \   0000004A   0x....             LDR      R1,??DataTable5_13  ;; 0x50000748
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    128            NRF_GPIO->PIN_CNF[P0_17_INDEX] = P0_17_EXT3_CNF;
   \   0000004E   0x2004             MOVS     R0,#+4
   \   00000050   0x....             LDR      R1,??DataTable5_14  ;; 0x50000744
   \   00000052   0x6008             STR      R0,[R1, #+0]
    129            NRF_GPIO->PIN_CNF[P0_16_INDEX] = P0_16_SCL_CNF;
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x....             LDR      R1,??DataTable5_15  ;; 0x50000740
   \   00000058   0x6008             STR      R0,[R1, #+0]
    130            NRF_GPIO->PIN_CNF[P0_15_INDEX] = P0_15_SDA_CNF;
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x....             LDR      R1,??DataTable5_16  ;; 0x5000073c
   \   0000005E   0x6008             STR      R0,[R1, #+0]
    131            NRF_GPIO->PIN_CNF[P0_14_INDEX] = P0_14_INT2_CNF;
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x....             LDR      R1,??DataTable5_17  ;; 0x50000738
   \   00000064   0x6008             STR      R0,[R1, #+0]
    132            NRF_GPIO->PIN_CNF[P0_13_INDEX] = P0_13_BLU1_CNF;
   \   00000066   0x2003             MOVS     R0,#+3
   \   00000068   0x....             LDR      R1,??DataTable5_18  ;; 0x50000734
   \   0000006A   0x6008             STR      R0,[R1, #+0]
    133            NRF_GPIO->PIN_CNF[P0_12_INDEX] = P0_12_BLU0_CNF;
   \   0000006C   0x2003             MOVS     R0,#+3
   \   0000006E   0x....             LDR      R1,??DataTable5_19  ;; 0x50000730
   \   00000070   0x6008             STR      R0,[R1, #+0]
    134            NRF_GPIO->PIN_CNF[P0_11_INDEX] = P0_11_GRN0_CNF;
   \   00000072   0x2003             MOVS     R0,#+3
   \   00000074   0x....             LDR      R1,??DataTable5_20  ;; 0x5000072c
   \   00000076   0x6008             STR      R0,[R1, #+0]
    135            NRF_GPIO->PIN_CNF[P0_10_INDEX] = P0_10_GRN1_CNF;
   \   00000078   0x2003             MOVS     R0,#+3
   \   0000007A   0x....             LDR      R1,??DataTable5_21  ;; 0x50000728
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    136            NRF_GPIO->PIN_CNF[P0_09_INDEX] = P0_09_BLU2_CNF;
   \   0000007E   0x2003             MOVS     R0,#+3
   \   00000080   0x....             LDR      R1,??DataTable5_22  ;; 0x50000724
   \   00000082   0x6008             STR      R0,[R1, #+0]
    137            NRF_GPIO->PIN_CNF[P0_08_INDEX] = P0_08_GRN2_CNF;
   \   00000084   0x2003             MOVS     R0,#+3
   \   00000086   0x....             LDR      R1,??DataTable5_23  ;; 0x50000720
   \   00000088   0x6008             STR      R0,[R1, #+0]
    138            NRF_GPIO->PIN_CNF[P0_07_INDEX] = P0_07_BLU3_CNF;
   \   0000008A   0x2003             MOVS     R0,#+3
   \   0000008C   0x....             LDR      R1,??DataTable5_24  ;; 0x5000071c
   \   0000008E   0x6008             STR      R0,[R1, #+0]
    139            NRF_GPIO->PIN_CNF[P0_06_INDEX] = P0_06_GRN3_CNF;
   \   00000090   0x2003             MOVS     R0,#+3
   \   00000092   0x....             LDR      R1,??DataTable5_25  ;; 0x50000718
   \   00000094   0x6008             STR      R0,[R1, #+0]
    140            NRF_GPIO->PIN_CNF[P0_05_INDEX] = P0_05_BLU4_CNF;
   \   00000096   0x2003             MOVS     R0,#+3
   \   00000098   0x....             LDR      R1,??DataTable5_26  ;; 0x50000714
   \   0000009A   0x6008             STR      R0,[R1, #+0]
    141            NRF_GPIO->PIN_CNF[P0_04_INDEX] = P0_04_GRN4_CNF;
   \   0000009C   0x2003             MOVS     R0,#+3
   \   0000009E   0x....             LDR      R1,??DataTable5_27  ;; 0x50000710
   \   000000A0   0x6008             STR      R0,[R1, #+0]
    142            NRF_GPIO->PIN_CNF[P0_03_INDEX] = P0_03_BLU5_CNF;
   \   000000A2   0x2003             MOVS     R0,#+3
   \   000000A4   0x....             LDR      R1,??DataTable5_28  ;; 0x5000070c
   \   000000A6   0x6008             STR      R0,[R1, #+0]
    143            NRF_GPIO->PIN_CNF[P0_02_INDEX] = P0_02_GRN5_CNF;
   \   000000A8   0x2003             MOVS     R0,#+3
   \   000000AA   0x....             LDR      R1,??DataTable5_29  ;; 0x50000708
   \   000000AC   0x6008             STR      R0,[R1, #+0]
    144            NRF_GPIO->PIN_CNF[P0_01_INDEX] = P0_01_BLU6_CNF;
   \   000000AE   0x2003             MOVS     R0,#+3
   \   000000B0   0x....             LDR      R1,??DataTable5_30  ;; 0x50000704
   \   000000B2   0x6008             STR      R0,[R1, #+0]
    145            NRF_GPIO->PIN_CNF[P0_00_INDEX] = P0_00_GRN6_CNF;
   \   000000B4   0x2003             MOVS     R0,#+3
   \   000000B6   0x....             LDR      R1,??DataTable5_31  ;; 0x50000700
   \   000000B8   0x6008             STR      R0,[R1, #+0]
    146             
    147          } /* end GpioSetup() */
   \   000000BA   0x4770             BX       LR               ;; return
    148          
    149          
    150          /*----------------------------------------------------------------------------------------------------------------------
    151          Function: PowerSetup
    152          
    153          Description
    154          Loads registers to configure various power control features of the 51422.
    155          
    156          Requires:
    157            - 
    158          
    159          Promises:
    160            - 
    161          */

   \                                 In section .text, align 2, keep-with-next
    162          void PowerSetup(void)
    163          {
    164            /* Set the sub power mode to constant latency (pg. 42 in the ref manual) */
    165            NRF_POWER->TASKS_LOWPWR   = 0;
   \                     PowerSetup: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x....             LDR      R1,??DataTable5_32  ;; 0x4000007c
   \   00000004   0x6008             STR      R0,[R1, #+0]
    166            NRF_POWER->TASKS_CONSTLAT = 1;
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x....             LDR      R1,??DataTable5_33  ;; 0x40000078
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    167          
    168          } /* end PowerSetup() */
   \   0000000C   0x4770             BX       LR               ;; return
    169          
    170          
    171          /*----------------------------------------------------------------------------------------------------------------------
    172          Function: ClockSetup
    173          
    174          Description:
    175          Loads all registers required to set up the processor clocks.  The main clock, HFCLK is sourced from the
    176          16MHz crystal.  The slow clock, LFCLK, will be synthesized from the 16MHz and configured to provide
    177          a 1ms system tick.
    178          
    179          Requires:
    180            - 
    181          
    182          Promises:
    183            - 
    184          */

   \                                 In section .text, align 2, keep-with-next
    185          void ClockSetup(void)
    186          {
   \                     ClockSetup: (+1)
   \   00000000   0xB500             PUSH     {LR}
    187            u32 u32ClockStartTimeout = OSC_STARTUP_TIMOUT;
   \   00000002   0x....             LDR      R0,??DataTable5_34  ;; 0xf4240
    188            
    189            /* Start the main clock (HFCLK) and wait for the event to indicate it has started */
    190            NRF_CLOCK->EVENTS_HFCLKSTARTED = 0;
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x....             LDR      R2,??DataTable5_35  ;; 0x40000100
   \   00000008   0x6011             STR      R1,[R2, #+0]
    191            NRF_CLOCK->TASKS_HFCLKSTART = 1;
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x2280             MOVS     R2,#+128
   \   0000000E   0x05D2             LSLS     R2,R2,#+23       ;; #+1073741824
   \   00000010   0x6011             STR      R1,[R2, #+0]
    192            while( !NRF_CLOCK->EVENTS_HFCLKSTARTED && (--u32ClockStartTimeout != 0) );
   \                     ??ClockSetup_0: (+1)
   \   00000012   0x....             LDR      R1,??DataTable5_35  ;; 0x40000100
   \   00000014   0x6809             LDR      R1,[R1, #+0]
   \   00000016   0x2900             CMP      R1,#+0
   \   00000018   0xD102             BNE      ??ClockSetup_1
   \   0000001A   0x1E40             SUBS     R0,R0,#+1
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD1F8             BNE      ??ClockSetup_0
    193            
    194            /* Check for timeout - if the clock didn't start, turn it off and flag it */
    195            if(u32ClockStartTimeout == 0)
   \                     ??ClockSetup_1: (+1)
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD108             BNE      ??ClockSetup_2
    196            {
    197              NRF_CLOCK->TASKS_HFCLKSTOP = 1;
   \   00000024   0x2101             MOVS     R1,#+1
   \   00000026   0x....             LDR      R2,??DataTable5_36  ;; 0x40000004
   \   00000028   0x6011             STR      R1,[R2, #+0]
    198              G_u32SystemFlags |= _SYSTEM_HFCLK_NO_START;
   \   0000002A   0x....             LDR      R1,??DataTable5_37
   \   0000002C   0x6809             LDR      R1,[R1, #+0]
   \   0000002E   0x2201             MOVS     R2,#+1
   \   00000030   0x430A             ORRS     R2,R2,R1
   \   00000032   0x....             LDR      R1,??DataTable5_37
   \   00000034   0x600A             STR      R2,[R1, #+0]
    199            }
    200            NRF_CLOCK->EVENTS_HFCLKSTARTED = 0;
   \                     ??ClockSetup_2: (+1)
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x....             LDR      R2,??DataTable5_35  ;; 0x40000100
   \   0000003A   0x6011             STR      R1,[R2, #+0]
    201             
    202            
    203            /* Setup and start the 32.768kHz (LFCLK) clock (synthesized from HFCLK) */
    204            NRF_CLOCK->LFCLKSRC = (CLOCK_LFCLKSRC_SRC_Synth << CLOCK_LFCLKSRC_SRC_Pos);
   \   0000003C   0x2102             MOVS     R1,#+2
   \   0000003E   0x....             LDR      R2,??DataTable5_38  ;; 0x40000518
   \   00000040   0x6011             STR      R1,[R2, #+0]
    205            NRF_CLOCK->EVENTS_LFCLKSTARTED = 0;
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0x....             LDR      R2,??DataTable5_39  ;; 0x40000104
   \   00000046   0x6011             STR      R1,[R2, #+0]
    206            NRF_CLOCK->TASKS_LFCLKSTART = 1;
   \   00000048   0x2101             MOVS     R1,#+1
   \   0000004A   0x....             LDR      R2,??DataTable5_40  ;; 0x40000008
   \   0000004C   0x6011             STR      R1,[R2, #+0]
    207            
    208            /* No need for timeout as an HFCLK of some sort is guaranteed to be running so LFCLK has to start */
    209            while (NRF_CLOCK->EVENTS_LFCLKSTARTED == 0);
   \                     ??ClockSetup_3: (+1)
   \   0000004E   0x....             LDR      R1,??DataTable5_39  ;; 0x40000104
   \   00000050   0x6809             LDR      R1,[R1, #+0]
   \   00000052   0x2900             CMP      R1,#+0
   \   00000054   0xD0FB             BEQ      ??ClockSetup_3
    210            NRF_CLOCK->EVENTS_LFCLKSTARTED = 0;
   \   00000056   0x2100             MOVS     R1,#+0
   \   00000058   0x....             LDR      R2,??DataTable5_39  ;; 0x40000104
   \   0000005A   0x6011             STR      R1,[R2, #+0]
    211           
    212          #if 0  /* Can't use RTC because we synthesize LFCLK and therefore RTC would not be clocked when HFCLK is sleeping */  
    213            /* Configure the RTC to give a 1ms tick */
    214            NRF_RTC1->STOP = 1;
    215            NRF_RTC1->PRESCALER = RTC_PRESCALE_INIT;
    216            NRF_RTC1->EVTENSET = (1 << RTC_EVTEN_TICK_Pos);
    217            NRF_RTC1->INTENSET = (1 << RTC_INTENSET_TICK_Pos);
    218            
    219            /* Clear then start the RTC */
    220            NRF_RTC1->CLEAR = 1;
    221            NRF_RTC1->START = 1;
    222          #endif
    223            
    224          } /* end ClockSetup */
   \   0000005C   0xBD00             POP      {PC}             ;; return
    225          
    226          
    227          /*----------------------------------------------------------------------------------------------------------------------
    228          Function: InterruptSetup
    229          
    230          Description:
    231          Performs initial interrupt setup.
    232          
    233          Requires:
    234            -
    235          
    236          Promises:
    237            - 
    238          */

   \                                 In section .text, align 2, keep-with-next
    239          void InterruptSetup(void)
    240          {
    241          
    242            
    243          } /* end InterruptSetup */
   \                     InterruptSetup: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    244          
    245          
    246          /*----------------------------------------------------------------------------------------------------------------------
    247          Function: SysTickSetup
    248          
    249          Description:
    250          Initializes the 1ms and 1s System Ticks from the TIMER1 peripheral.
    251          Since this application is not concerned about power, we can keep the 16MHz clock
    252          on and power TIMER1 all the time.  
    253          
    254          Requires:
    255            -
    256          
    257          Promises:
    258            - Both system timers are zeroed and the Timer is configured to produce 1ms interrupts
    259          */

   \                                 In section .text, align 2, keep-with-next
    260          void SysTickSetup(void)
    261          {
   \                     SysTickSetup: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    262            G_u32SystemTime1ms = 0;      
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x....             LDR      R1,??DataTable5_41
   \   00000006   0x6008             STR      R0,[R1, #+0]
    263            G_u32SystemTime1s  = 0;   
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x....             LDR      R1,??DataTable5_42
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    264            
    265            /* Load the SysTick Timer */
    266            NRF_TIMER1->MODE      = TIMER_MODE_MODE_Timer << TIMER_MODE_MODE_Pos;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x....             LDR      R1,??DataTable5_43  ;; 0x40009504
   \   00000012   0x6008             STR      R0,[R1, #+0]
    267            NRF_TIMER1->BITMODE   = TIMER_BITMODE_BITMODE_16Bit << TIMER_BITMODE_BITMODE_Pos;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x....             LDR      R1,??DataTable5_44  ;; 0x40009508
   \   00000018   0x6008             STR      R0,[R1, #+0]
    268            NRF_TIMER1->PRESCALER = 0;
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x....             LDR      R1,??DataTable5_45  ;; 0x40009510
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    269            NRF_TIMER1->SHORTS    = TIMER_SHORTS_COMPARE0_CLEAR_Enabled << TIMER_SHORTS_COMPARE0_CLEAR_Pos;
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x....             LDR      R1,??DataTable5_46  ;; 0x40009200
   \   00000024   0x6008             STR      R0,[R1, #+0]
    270            NRF_TIMER1->CC[0]     = TIMER_COUNT_1MS;
   \   00000026   0x20FA             MOVS     R0,#+250
   \   00000028   0x0180             LSLS     R0,R0,#+6        ;; #+16000
   \   0000002A   0x....             LDR      R1,??DataTable5_47  ;; 0x40009540
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    271            NRF_TIMER1->INTENSET  = TIMER_INTENSET_COMPARE0_Enabled << TIMER_INTENSET_COMPARE0_Pos;
   \   0000002E   0x2080             MOVS     R0,#+128
   \   00000030   0x0240             LSLS     R0,R0,#+9        ;; #+65536
   \   00000032   0x....             LDR      R1,??DataTable5_48  ;; 0x40009304
   \   00000034   0x6008             STR      R0,[R1, #+0]
    272            
    273            /* Enable TIMER1 interrupt */
    274            NVIC_SetPriority(TIMER1_IRQn, 0);
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x2009             MOVS     R0,#+9
   \   0000003A   0x.... 0x....      BL       NVIC_SetPriority
    275            //NVIC_EnableIRQ(TIMER1_IRQn);
    276            
    277            /* Start timer */
    278            NRF_TIMER1->TASKS_START = 1;
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0x....             LDR      R1,??DataTable5_49  ;; 0x40009000
   \   00000042   0x6008             STR      R0,[R1, #+0]
    279          
    280            
    281          } /* end SysTickSetup() */
   \   00000044   0xBD01             POP      {R0,PC}          ;; return
    282          
    283          
    284          /*----------------------------------------------------------------------------------------------------------------------
    285          Function: SystemSleep
    286          
    287          Description:
    288          Puts the system into sleep mode. 
    289          
    290          TBD
    291          
    292          Requires:
    293            - TBD
    294          
    295          Promises:
    296            - Configures processor for maximum sleep while still allowing any required
    297              interrupt to wake it up.
    298          */

   \                                 In section .text, align 2, keep-with-next
    299          void SystemSleep(void)
    300          {    
   \                     SystemSleep: (+1)
   \   00000000   0xB500             PUSH     {LR}
    301            /* Set the system control register for Sleep (but not Deep Sleep) */
    302             
    303             /* Set the sleep flag (cleared only in SysTick ISR */
    304             G_u32SystemFlags |= _SYSTEM_SLEEPING;
   \   00000002   0x....             LDR      R0,??DataTable5_37
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2180             MOVS     R1,#+128
   \   00000008   0x05C9             LSLS     R1,R1,#+23       ;; #+1073741824
   \   0000000A   0x4301             ORRS     R1,R1,R0
   \   0000000C   0x....             LDR      R0,??DataTable5_37
   \   0000000E   0x6001             STR      R1,[R0, #+0]
    305          
    306             while(NRF_TIMER1->EVENTS_COMPARE[0] == 0);
   \                     ??SystemSleep_0: (+1)
   \   00000010   0x....             LDR      R0,??DataTable5_50  ;; 0x40009140
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD0FB             BEQ      ??SystemSleep_0
    307             NRF_TIMER1->EVENTS_COMPARE[0] = 0;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x....             LDR      R1,??DataTable5_50  ;; 0x40009140
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    308             
    309            /* Now sleep until an event wakes us up */
    310             //while(G_u32SystemFlags & _SYSTEM_SLEEPING)
    311             {
    312             }
    313          
    314            /* Clear the sleep mode status flags */
    315              
    316          } /* end SystemSleep(void) */
   \   0000001E   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0xE000ED1C         DC32     0xe000ed1c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0xE000E400         DC32     0xe000e400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x50000778         DC32     0x50000778

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x50000774         DC32     0x50000774

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x50000770         DC32     0x50000770

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x5000076C         DC32     0x5000076c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x50000768         DC32     0x50000768

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x50000764         DC32     0x50000764

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x50000760         DC32     0x50000760

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x5000075C         DC32     0x5000075c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x50000758         DC32     0x50000758

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x50000754         DC32     0x50000754

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x50000750         DC32     0x50000750

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x5000074C         DC32     0x5000074c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x50000748         DC32     0x50000748

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x50000744         DC32     0x50000744

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_15:
   \   00000000   0x50000740         DC32     0x50000740

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_16:
   \   00000000   0x5000073C         DC32     0x5000073c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_17:
   \   00000000   0x50000738         DC32     0x50000738

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_18:
   \   00000000   0x50000734         DC32     0x50000734

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_19:
   \   00000000   0x50000730         DC32     0x50000730

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_20:
   \   00000000   0x5000072C         DC32     0x5000072c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_21:
   \   00000000   0x50000728         DC32     0x50000728

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_22:
   \   00000000   0x50000724         DC32     0x50000724

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_23:
   \   00000000   0x50000720         DC32     0x50000720

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_24:
   \   00000000   0x5000071C         DC32     0x5000071c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_25:
   \   00000000   0x50000718         DC32     0x50000718

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_26:
   \   00000000   0x50000714         DC32     0x50000714

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_27:
   \   00000000   0x50000710         DC32     0x50000710

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_28:
   \   00000000   0x5000070C         DC32     0x5000070c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_29:
   \   00000000   0x50000708         DC32     0x50000708

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_30:
   \   00000000   0x50000704         DC32     0x50000704

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_31:
   \   00000000   0x50000700         DC32     0x50000700

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_32:
   \   00000000   0x4000007C         DC32     0x4000007c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_33:
   \   00000000   0x40000078         DC32     0x40000078

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_34:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_35:
   \   00000000   0x40000100         DC32     0x40000100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_36:
   \   00000000   0x40000004         DC32     0x40000004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_37:
   \   00000000   0x........         DC32     G_u32SystemFlags

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_38:
   \   00000000   0x40000518         DC32     0x40000518

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_39:
   \   00000000   0x40000104         DC32     0x40000104

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_40:
   \   00000000   0x40000008         DC32     0x40000008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_41:
   \   00000000   0x........         DC32     G_u32SystemTime1ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_42:
   \   00000000   0x........         DC32     G_u32SystemTime1s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_43:
   \   00000000   0x40009504         DC32     0x40009504

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_44:
   \   00000000   0x40009508         DC32     0x40009508

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_45:
   \   00000000   0x40009510         DC32     0x40009510

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_46:
   \   00000000   0x40009200         DC32     0x40009200

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_47:
   \   00000000   0x40009540         DC32     0x40009540

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_48:
   \   00000000   0x40009304         DC32     0x40009304

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_49:
   \   00000000   0x40009000         DC32     0x40009000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_50:
   \   00000000   0x40009140         DC32     0x40009140
    317          
    318          
    319          
    320          
    321          /*--------------------------------------------------------------------------------------------------------------------*/
    322          /* End of File */
    323          /*--------------------------------------------------------------------------------------------------------------------*/
    324          
    325          
    326          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   ClockSetup
       0   GpioSetup
       0   InterruptSetup
      20   NVIC_SetPriority
       0   PowerSetup
       8   SysTickSetup
         8   -> NVIC_SetPriority
       4   SystemSleep
       0   WatchDogSetup


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_15
       4  ??DataTable5_16
       4  ??DataTable5_17
       4  ??DataTable5_18
       4  ??DataTable5_19
       4  ??DataTable5_2
       4  ??DataTable5_20
       4  ??DataTable5_21
       4  ??DataTable5_22
       4  ??DataTable5_23
       4  ??DataTable5_24
       4  ??DataTable5_25
       4  ??DataTable5_26
       4  ??DataTable5_27
       4  ??DataTable5_28
       4  ??DataTable5_29
       4  ??DataTable5_3
       4  ??DataTable5_30
       4  ??DataTable5_31
       4  ??DataTable5_32
       4  ??DataTable5_33
       4  ??DataTable5_34
       4  ??DataTable5_35
       4  ??DataTable5_36
       4  ??DataTable5_37
       4  ??DataTable5_38
       4  ??DataTable5_39
       4  ??DataTable5_4
       4  ??DataTable5_40
       4  ??DataTable5_41
       4  ??DataTable5_42
       4  ??DataTable5_43
       4  ??DataTable5_44
       4  ??DataTable5_45
       4  ??DataTable5_46
       4  ??DataTable5_47
       4  ??DataTable5_48
       4  ??DataTable5_49
       4  ??DataTable5_5
       4  ??DataTable5_50
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      94  ClockSetup
      12  G_asBspButtonConfigurations
     288  G_asBspLedConfigurations
     188  GpioSetup
       2  InterruptSetup
     138  NVIC_SetPriority
      14  PowerSetup
      70  SysTickSetup
      32  SystemSleep
       2  WatchDogSetup

 
 300 bytes in section .rodata
 748 bytes in section .text
 
 748 bytes of CODE  memory
 300 bytes of CONST memory

Errors: none
Warnings: none
