###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.1.7305/W32 for ARM        29/Jun/2018  00:37:48
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\EiE\EiE Git\AntBleBeacon\nordic_sdk6_1_0\ble_advdata_parser.c
#    Command line =  
#        "D:\EiE\EiE Git\AntBleBeacon\nordic_sdk6_1_0\ble_advdata_parser.c" -D
#        NRF51 -lC "D:\EiE\EiE Git\AntBleBeacon\iar_7_20_1\Debug\List\" -o
#        "D:\EiE\EiE Git\AntBleBeacon\iar_7_20_1\Debug\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0 -e --fpu=None
#        --dlib_config "C:\Program Files\IAR
#        Systems\EWARM_7_20_1\arm\INC\c\DLib_Config_Normal.h" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\bsp\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\application\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\s310\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\ble\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\ble\ble_services\"
#        -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\ble\device_manager\"
#        -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\app_common\"
#        -On --require_prototypes -I "C:\Program Files\IAR
#        Systems\EWARM_7_20_1\arm\CMSIS\Include\"
#    List file    =  
#        D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\Debug\List\ble_advdata_parser.lst
#    Object file  =  
#        D:\EiE\EiE Git\AntBleBeacon\iar_7_20_1\Debug\Obj\ble_advdata_parser.o
#
###############################################################################

D:\EiE\EiE Git\AntBleBeacon\nordic_sdk6_1_0\ble_advdata_parser.c
      1          #include "ble_advdata_parser.h"
      2          

   \                                 In section .text, align 2, keep-with-next
      3          uint32_t ble_advdata_parser_field_find(uint8_t    type,
      4                                                 uint8_t  * p_advdata,
      5                                                 uint8_t  * len,
      6                                                 uint8_t ** pp_field_data)
      7          {
   \                     ble_advdata_parser_field_find: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
      8              uint32_t index = 0;
   \   00000004   0x2500             MOVS     R5,#+0
      9          
     10              while (index < *len)
   \                     ??ble_advdata_parser_field_find_0: (+1)
   \   00000006   0x7810             LDRB     R0,[R2, #+0]
   \   00000008   0x4285             CMP      R5,R0
   \   0000000A   0xD211             BCS      ??ble_advdata_parser_field_find_1
     11              {
     12                  uint8_t field_length = p_advdata[index];
   \   0000000C   0x5D4E             LDRB     R6,[R1, R5]
     13                  uint8_t field_type   = p_advdata[index + 1];
   \   0000000E   0x1948             ADDS     R0,R1,R5
   \   00000010   0x7847             LDRB     R7,[R0, #+1]
     14          
     15                  if (field_type == type)
   \   00000012   0xB2FF             UXTB     R7,R7
   \   00000014   0xB2E4             UXTB     R4,R4
   \   00000016   0x42A7             CMP      R7,R4
   \   00000018   0xD106             BNE      ??ble_advdata_parser_field_find_2
     16                  {
     17                      *pp_field_data = &p_advdata[index + 2];
   \   0000001A   0x1948             ADDS     R0,R1,R5
   \   0000001C   0x1C80             ADDS     R0,R0,#+2
   \   0000001E   0x6018             STR      R0,[R3, #+0]
     18                      *len           = field_length - 1;
   \   00000020   0x1E70             SUBS     R0,R6,#+1
   \   00000022   0x7010             STRB     R0,[R2, #+0]
     19                      return NRF_SUCCESS;
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0xE004             B        ??ble_advdata_parser_field_find_3
     20                  }
     21                  index += field_length + 1;
   \                     ??ble_advdata_parser_field_find_2: (+1)
   \   00000028   0xB2F6             UXTB     R6,R6
   \   0000002A   0x1C76             ADDS     R6,R6,#+1
   \   0000002C   0x19AD             ADDS     R5,R5,R6
   \   0000002E   0xE7EA             B        ??ble_advdata_parser_field_find_0
     22              }
     23              return NRF_ERROR_NOT_FOUND;
   \                     ??ble_advdata_parser_field_find_1: (+1)
   \   00000030   0x2005             MOVS     R0,#+5
   \                     ??ble_advdata_parser_field_find_3: (+1)
   \   00000032   0xBDF0             POP      {R4-R7,PC}       ;; return
     24          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      20   ble_advdata_parser_field_find


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      52  ble_advdata_parser_field_find

 
 52 bytes in section .text
 
 52 bytes of CODE memory

Errors: none
Warnings: none
