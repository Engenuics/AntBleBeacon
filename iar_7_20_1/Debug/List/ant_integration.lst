###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.1.7305/W32 for ARM        29/Jun/2018  10:17:51
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\EiE\EiE Git\AntBleBeacon\bsp\ant_integration.c
#    Command line =  
#        "D:\EiE\EiE Git\AntBleBeacon\bsp\ant_integration.c" -D NRF51 -lC
#        "D:\EiE\EiE Git\AntBleBeacon\iar_7_20_1\Debug\List\" -o "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\Debug\Obj\" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M0 -e --fpu=None --dlib_config
#        "C:\Program Files\IAR
#        Systems\EWARM_7_20_1\arm\INC\c\DLib_Config_Normal.h" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\bsp\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\application\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\s310\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\ble\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\ble\ble_services\"
#        -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\ble\device_manager\"
#        -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\app_common\"
#        -On --require_prototypes -I "C:\Program Files\IAR
#        Systems\EWARM_7_20_1\arm\CMSIS\Include\"
#    List file    =  
#        D:\EiE\EiE Git\AntBleBeacon\iar_7_20_1\Debug\List\ant_integration.lst
#    Object file  =  
#        D:\EiE\EiE Git\AntBleBeacon\iar_7_20_1\Debug\Obj\ant_integration.o
#
###############################################################################

D:\EiE\EiE Git\AntBleBeacon\bsp\ant_integration.c
      1          /**********************************************************************************************************************
      2          File: ant_integration.c                                                                
      3          
      4          Description:
      5          This is a ant_integration .c file new source code
      6          **********************************************************************************************************************/
      7          
      8          #include "configuration.h"
      9          
     10          /***********************************************************************************************************************
     11          Global variable definitions with scope across entire project.
     12          All Global variable names shall start with "G_"
     13          ***********************************************************************************************************************/
     14          /* New variables */

   \                                 In section .bss, align 4
     15          volatile u32 G_u32ANTIntegrationFlags;                 /* Global state flags */
   \                     G_u32ANTIntegrationFlags:
   \   00000000                      DS8 4
     16          
     17          
     18          /*--------------------------------------------------------------------------------------------------------------------*/
     19          /* Existing variables (defined in other files -- should all contain the "extern" keyword) */
     20          extern volatile u32 G_u32SystemTime1ms;                /*!< @brief From main.c */
     21          extern volatile u32 G_u32SystemTime1s;                 /*!< @brief From main.c */
     22          extern volatile u32 G_u32SystemFlags;                  /*!< @brief From main.c */
     23          
     24          
     25          /***********************************************************************************************************************
     26          Global variable definitions with scope limited to this local application.
     27          Variable names shall start with "SocInt_" and be declared as static.
     28          ***********************************************************************************************************************/
     29          //static u32 ANTInt_u32Timeout;                      /* Timeout counter used across states */
     30          
     31          
     32          /*--------------------------------------------------------------------------------------------------------------------*/
     33          /* Private Function Declarations.                                                                                     */
     34          /*--------------------------------------------------------------------------------------------------------------------*/
     35          
     36          /**********************************************************************************************************************
     37          Function Definitions
     38          **********************************************************************************************************************/
     39          /*--------------------------------------------------------------------------------------------------------------------*/
     40          /* Public functions                                                                                                   */
     41          /*--------------------------------------------------------------------------------------------------------------------*/
     42          
     43          /*--------------------------------------------------------------------------------------------------------------------*/
     44          /* Protected functions                                                                                                */
     45          /*--------------------------------------------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
     46          bool ANTIntegrationInitialize(void)
     47          {
   \                     ANTIntegrationInitialize: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     48            return sd_ant_stack_reset() == NRF_SUCCESS;
   \   00000002   0xDFC0             SVC      0xC0
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD101             BNE      ??ANTIntegrationInitialize_0
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0xE000             B        ??ANTIntegrationInitialize_1
   \                     ??ANTIntegrationInitialize_0: (+1)
   \   0000000C   0x2000             MOVS     R0,#+0
   \                     ??ANTIntegrationInitialize_1: (+1)
   \   0000000E   0xB2C0             UXTB     R0,R0
   \   00000010   0xBD02             POP      {R1,PC}          ;; return
     49          }
     50          
     51          /**
     52          *   Handle the Stack Event to determine if ANT message. If 
     53          *   ANT Message, then set event.                       
     54          */

   \                                 In section .text, align 2, keep-with-next
     55          void ANTIntegrationHandler()
     56          {
     57              
     58          }
   \                     ANTIntegrationHandler: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     59          
     60          
     61          
     62          /*--------------------------------------------------------------------------------------------------------------------*/
     63          /* End of File                                                                                                        */
     64          /*--------------------------------------------------------------------------------------------------------------------*/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ANTIntegrationHandler
       8   ANTIntegrationInitialize


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  ANTIntegrationHandler
      18  ANTIntegrationInitialize
       4  G_u32ANTIntegrationFlags

 
  4 bytes in section .bss
 20 bytes in section .text
 
 20 bytes of CODE memory
  4 bytes of DATA memory

Errors: none
Warnings: none
