###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.1.7305/W32 for ARM        29/Jun/2018  00:37:50
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\EiE\EiE Git\AntBleBeacon\nordic_sdk6_1_0\system_nrf51422.c
#    Command line =  
#        "D:\EiE\EiE Git\AntBleBeacon\nordic_sdk6_1_0\system_nrf51422.c" -D
#        NRF51 -lC "D:\EiE\EiE Git\AntBleBeacon\iar_7_20_1\Debug\List\" -o
#        "D:\EiE\EiE Git\AntBleBeacon\iar_7_20_1\Debug\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0 -e --fpu=None
#        --dlib_config "C:\Program Files\IAR
#        Systems\EWARM_7_20_1\arm\INC\c\DLib_Config_Normal.h" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\bsp\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\application\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\" -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\s310\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\ble\" -I
#        "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\ble\ble_services\"
#        -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\ble\device_manager\"
#        -I "D:\EiE\EiE
#        Git\AntBleBeacon\iar_7_20_1\..\nordic_sdk6_1_0\Include\app_common\"
#        -On --require_prototypes -I "C:\Program Files\IAR
#        Systems\EWARM_7_20_1\arm\CMSIS\Include\"
#    List file    =  
#        D:\EiE\EiE Git\AntBleBeacon\iar_7_20_1\Debug\List\system_nrf51422.lst
#    Object file  =  
#        D:\EiE\EiE Git\AntBleBeacon\iar_7_20_1\Debug\Obj\system_nrf51422.o
#
###############################################################################

D:\EiE\EiE Git\AntBleBeacon\nordic_sdk6_1_0\system_nrf51422.c
      1          /* Copyright (c) 2013, Nordic Semiconductor ASA
      2           * All rights reserved.
      3           *
      4           * Redistribution and use in source and binary forms, with or without
      5           * modification, are permitted provided that the following conditions are met:
      6           *
      7           *   * Redistributions of source code must retain the above copyright notice, this
      8           *     list of conditions and the following disclaimer.
      9           *
     10           *   * Redistributions in binary form must reproduce the above copyright notice,
     11           *     this list of conditions and the following disclaimer in the documentation
     12           *     and/or other materials provided with the distribution.
     13           *
     14           *   * Neither the name of Nordic Semiconductor ASA nor the names of its
     15           *     contributors may be used to endorse or promote products derived from
     16           *     this software without specific prior written permission.
     17           *
     18           * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     19           * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     20           * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
     21           * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
     22           * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     23           * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
     24           * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
     25           * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
     26           * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
     27           * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     28           *
     29           */
     30          
     31          /* NOTE: Template files (including this one) are application specific and therefore expected to 
     32             be copied into the application project folder prior to its use! */
     33          
     34          #include <stdint.h>
     35          #include <stdbool.h>
     36          #include "nrf.h"
     37          #include "system_nrf51.h"
     38          
     39          /*lint ++flb "Enter library region" */
     40          
     41          
     42          #define __SYSTEM_CLOCK      (16000000UL)     /*!< nRF51 devices use a fixed System Clock Frequency of 16MHz */
     43          
     44          static bool is_manual_peripheral_setup_needed(void);
     45          static bool is_disabled_in_debug_needed(void);
     46          
     47          
     48          #if defined ( __CC_ARM )
     49              uint32_t SystemCoreClock __attribute__((used)) = __SYSTEM_CLOCK;  
     50          #elif defined ( __ICCARM__ )

   \                                 In section .data, align 4, root
     51              __root uint32_t SystemCoreClock = __SYSTEM_CLOCK;
   \                     SystemCoreClock:
   \   00000000   0x00F42400         DC32 16000000
     52          #elif defined   ( __GNUC__ )
     53              uint32_t SystemCoreClock __attribute__((used)) = __SYSTEM_CLOCK;
     54          #endif
     55          

   \                                 In section .text, align 2, keep-with-next
     56          void SystemCoreClockUpdate(void)
     57          {
     58              SystemCoreClock = __SYSTEM_CLOCK;
   \                     SystemCoreClockUpdate: (+1)
   \   00000000   0x....             LDR      R0,??DataTable3  ;; 0xf42400
   \   00000002   0x....             LDR      R1,??DataTable3_1
   \   00000004   0x6008             STR      R0,[R1, #+0]
     59          }
   \   00000006   0x4770             BX       LR               ;; return
     60          

   \                                 In section .text, align 2, keep-with-next
     61          void SystemInit(void)
     62          {
   \                     SystemInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     63              /* If desired, switch off the unused RAM to lower consumption by the use of RAMON register.
     64                 It can also be done in the application main() function. */
     65          
     66              /* Prepare the peripherals for use as indicated by the PAN 26 "System: Manual setup is required
     67                 to enable the use of peripherals" found at Product Anomaly document for your device found at
     68                 https://www.nordicsemi.com/. The side effect of executing these instructions in the devices 
     69                 that do not need it is that the new peripherals in the second generation devices (LPCOMP for
     70                 example) will not be available. */
     71              if (is_manual_peripheral_setup_needed())
   \   00000002   0x.... 0x....      BL       is_manual_peripheral_setup_needed
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD006             BEQ      ??SystemInit_0
     72              {
     73                  *(uint32_t volatile *)0x40000504 = 0xC007FFDF;
   \   0000000A   0x....             LDR      R0,??DataTable3_2  ;; 0xc007ffdf
   \   0000000C   0x....             LDR      R1,??DataTable3_3  ;; 0x40000504
   \   0000000E   0x6008             STR      R0,[R1, #+0]
     74                  *(uint32_t volatile *)0x40006C18 = 0x00008000;
   \   00000010   0x2080             MOVS     R0,#+128
   \   00000012   0x0200             LSLS     R0,R0,#+8        ;; #+32768
   \   00000014   0x....             LDR      R1,??DataTable3_4  ;; 0x40006c18
   \   00000016   0x6008             STR      R0,[R1, #+0]
     75              }
     76              
     77              /* Disable PROTENSET registers under debug, as indicated by PAN 59 "MPU: Reset value of DISABLEINDEBUG
     78                 register is incorrect" found at Product Anomaly document four your device found at 
     79                 https://www.nordicsemi.com/. There is no side effect of using these instruction if not needed. */
     80              if (is_disabled_in_debug_needed())
   \                     ??SystemInit_0: (+1)
   \   00000018   0x.... 0x....      BL       is_disabled_in_debug_needed
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD002             BEQ      ??SystemInit_1
     81              {
     82                  NRF_MPU->DISABLEINDEBUG = MPU_DISABLEINDEBUG_DISABLEINDEBUG_Disabled << MPU_DISABLEINDEBUG_DISABLEINDEBUG_Pos;
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x....             LDR      R1,??DataTable3_5  ;; 0x40000608
   \   00000024   0x6008             STR      R0,[R1, #+0]
     83              }
     84          }
   \                     ??SystemInit_1: (+1)
   \   00000026   0xBD01             POP      {R0,PC}          ;; return
     85          
     86          

   \                                 In section .text, align 2, keep-with-next
     87          static bool is_manual_peripheral_setup_needed(void) 
     88          {
   \                     is_manual_peripheral_setup_needed: (+1)
   \   00000000   0xB500             PUSH     {LR}
     89              if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x1) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0))
   \   00000002   0x....             LDR      R0,??DataTable3_6  ;; 0xf0000fe0
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xB2C0             UXTB     R0,R0
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD12F             BNE      ??is_manual_peripheral_setup_needed_0
   \   0000000C   0x....             LDR      R0,??DataTable3_7  ;; 0xf0000fe4
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x0700             LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   00000012   0x0F00             LSRS     R0,R0,#+28
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD129             BNE      ??is_manual_peripheral_setup_needed_0
     90              {
     91                  if ((((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x00) && (((*(uint32_t *)0xF0000FEC) & 0x000000F0) == 0x0))
   \   00000018   0x....             LDR      R0,??DataTable3_8  ;; 0xf0000fe8
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x21F0             MOVS     R1,#+240
   \   0000001E   0x4001             ANDS     R1,R1,R0
   \   00000020   0x2900             CMP      R1,#+0
   \   00000022   0xD107             BNE      ??is_manual_peripheral_setup_needed_1
   \   00000024   0x....             LDR      R0,??DataTable3_9  ;; 0xf0000fec
   \   00000026   0x7800             LDRB     R0,[R0, #+0]
   \   00000028   0x21F0             MOVS     R1,#+240
   \   0000002A   0x4001             ANDS     R1,R1,R0
   \   0000002C   0x2900             CMP      R1,#+0
   \   0000002E   0xD101             BNE      ??is_manual_peripheral_setup_needed_1
     92                  {
     93                      return true;
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0xE01C             B        ??is_manual_peripheral_setup_needed_2
     94                  }
     95                  if ((((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x10) && (((*(uint32_t *)0xF0000FEC) & 0x000000F0) == 0x0))
   \                     ??is_manual_peripheral_setup_needed_1: (+1)
   \   00000034   0x....             LDR      R0,??DataTable3_8  ;; 0xf0000fe8
   \   00000036   0x7800             LDRB     R0,[R0, #+0]
   \   00000038   0x21F0             MOVS     R1,#+240
   \   0000003A   0x4001             ANDS     R1,R1,R0
   \   0000003C   0x2910             CMP      R1,#+16
   \   0000003E   0xD107             BNE      ??is_manual_peripheral_setup_needed_3
   \   00000040   0x....             LDR      R0,??DataTable3_9  ;; 0xf0000fec
   \   00000042   0x7800             LDRB     R0,[R0, #+0]
   \   00000044   0x21F0             MOVS     R1,#+240
   \   00000046   0x4001             ANDS     R1,R1,R0
   \   00000048   0x2900             CMP      R1,#+0
   \   0000004A   0xD101             BNE      ??is_manual_peripheral_setup_needed_3
     96                  {
     97                      return true;
   \   0000004C   0x2001             MOVS     R0,#+1
   \   0000004E   0xE00E             B        ??is_manual_peripheral_setup_needed_2
     98                  }
     99                  if ((((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x30) && (((*(uint32_t *)0xF0000FEC) & 0x000000F0) == 0x0))
   \                     ??is_manual_peripheral_setup_needed_3: (+1)
   \   00000050   0x....             LDR      R0,??DataTable3_8  ;; 0xf0000fe8
   \   00000052   0x7800             LDRB     R0,[R0, #+0]
   \   00000054   0x21F0             MOVS     R1,#+240
   \   00000056   0x4001             ANDS     R1,R1,R0
   \   00000058   0x2930             CMP      R1,#+48
   \   0000005A   0xD107             BNE      ??is_manual_peripheral_setup_needed_0
   \   0000005C   0x....             LDR      R0,??DataTable3_9  ;; 0xf0000fec
   \   0000005E   0x7800             LDRB     R0,[R0, #+0]
   \   00000060   0x21F0             MOVS     R1,#+240
   \   00000062   0x4001             ANDS     R1,R1,R0
   \   00000064   0x2900             CMP      R1,#+0
   \   00000066   0xD101             BNE      ??is_manual_peripheral_setup_needed_0
    100                  {
    101                      return true;
   \   00000068   0x2001             MOVS     R0,#+1
   \   0000006A   0xE000             B        ??is_manual_peripheral_setup_needed_2
    102                  }
    103              }
    104              
    105              return false;
   \                     ??is_manual_peripheral_setup_needed_0: (+1)
   \   0000006C   0x2000             MOVS     R0,#+0
   \                     ??is_manual_peripheral_setup_needed_2: (+1)
   \   0000006E   0xBD00             POP      {PC}             ;; return
    106          }
    107          

   \                                 In section .text, align 2, keep-with-next
    108          static bool is_disabled_in_debug_needed(void) 
    109          {
   \                     is_disabled_in_debug_needed: (+1)
   \   00000000   0xB500             PUSH     {LR}
    110              if ((((*(uint32_t *)0xF0000FE0) & 0x000000FF) == 0x1) && (((*(uint32_t *)0xF0000FE4) & 0x0000000F) == 0x0))
   \   00000002   0x....             LDR      R0,??DataTable3_6  ;; 0xf0000fe0
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xB2C0             UXTB     R0,R0
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD113             BNE      ??is_disabled_in_debug_needed_0
   \   0000000C   0x....             LDR      R0,??DataTable3_7  ;; 0xf0000fe4
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x0700             LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   00000012   0x0F00             LSRS     R0,R0,#+28
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD10D             BNE      ??is_disabled_in_debug_needed_0
    111              {
    112                  if ((((*(uint32_t *)0xF0000FE8) & 0x000000F0) == 0x40) && (((*(uint32_t *)0xF0000FEC) & 0x000000F0) == 0x0))
   \   00000018   0x....             LDR      R0,??DataTable3_8  ;; 0xf0000fe8
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x21F0             MOVS     R1,#+240
   \   0000001E   0x4001             ANDS     R1,R1,R0
   \   00000020   0x2940             CMP      R1,#+64
   \   00000022   0xD107             BNE      ??is_disabled_in_debug_needed_0
   \   00000024   0x....             LDR      R0,??DataTable3_9  ;; 0xf0000fec
   \   00000026   0x7800             LDRB     R0,[R0, #+0]
   \   00000028   0x21F0             MOVS     R1,#+240
   \   0000002A   0x4001             ANDS     R1,R1,R0
   \   0000002C   0x2900             CMP      R1,#+0
   \   0000002E   0xD101             BNE      ??is_disabled_in_debug_needed_0
    113                  {
    114                      return true;
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0xE000             B        ??is_disabled_in_debug_needed_1
    115                  }
    116              }
    117              
    118              return false;
   \                     ??is_disabled_in_debug_needed_0: (+1)
   \   00000034   0x2000             MOVS     R0,#+0
   \                     ??is_disabled_in_debug_needed_1: (+1)
   \   00000036   0xBD00             POP      {PC}             ;; return
    119          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x00F42400         DC32     0xf42400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     SystemCoreClock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0xC007FFDF         DC32     0xc007ffdf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x40000504         DC32     0x40000504

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x40006C18         DC32     0x40006c18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x40000608         DC32     0x40000608

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0xF0000FE0         DC32     0xf0000fe0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0xF0000FE4         DC32     0xf0000fe4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0xF0000FE8         DC32     0xf0000fe8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0xF0000FEC         DC32     0xf0000fec
    120          
    121          /*lint --flb "Leave library region" */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   SystemCoreClockUpdate
       8   SystemInit
         8   -> is_disabled_in_debug_needed
         8   -> is_manual_peripheral_setup_needed
       4   is_disabled_in_debug_needed
       4   is_manual_peripheral_setup_needed


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  SystemCoreClock
       8  SystemCoreClockUpdate
      40  SystemInit
      56  is_disabled_in_debug_needed
     112  is_manual_peripheral_setup_needed

 
   4 bytes in section .data
 256 bytes in section .text
 
 256 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
